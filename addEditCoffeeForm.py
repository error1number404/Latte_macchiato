# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'addEditCoffeeForm.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sqlite3
from PyQt5.QtCore import Qt

class Ui_Form(QtWidgets.QWidget):
    def __init__(self, parent):
        super(Ui_Form,self).__init__(parent)
        self.setupUi(self)
        self.parent = parent
        self.setWindowFlags(Qt.WindowStaysOnTopHint | Qt.Window)
        self.show()

    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(450, 450)
        self.NameLineEdit = QtWidgets.QLineEdit(Form)
        self.NameLineEdit.setGeometry(QtCore.QRect(170, 20, 250, 20))
        self.NameLineEdit.setObjectName("NameLineEdit")
        self.GradeComboBox = QtWidgets.QComboBox(Form)
        self.GradeComboBox.setGeometry(QtCore.QRect(170, 50, 250, 20))
        self.GradeComboBox.setObjectName("GradeComboBox")
        self.StatusSpinBox = QtWidgets.QSpinBox(Form)
        self.StatusSpinBox.setGeometry(QtCore.QRect(170, 80, 250, 20))
        self.StatusSpinBox.setMaximum(1)
        self.StatusSpinBox.setObjectName("StatusSpinBox")
        self.DescriptionLineEdit = QtWidgets.QLineEdit(Form)
        self.DescriptionLineEdit.setGeometry(QtCore.QRect(170, 110, 250, 20))
        self.DescriptionLineEdit.setObjectName("DescriptionLineEdit")
        self.PriceLineEdit = QtWidgets.QLineEdit(Form)
        self.PriceLineEdit.setGeometry(QtCore.QRect(170, 140, 251, 20))
        self.PriceLineEdit.setObjectName("PriceLineEdit")
        self.VolumeLineEdit = QtWidgets.QLineEdit(Form)
        self.VolumeLineEdit.setGeometry(QtCore.QRect(170, 170, 251, 20))
        self.VolumeLineEdit.setObjectName("VolumeLineEdit")
        self.SaveButton = QtWidgets.QPushButton(Form)
        self.SaveButton.setGeometry(QtCore.QRect(320, 390, 100, 25))
        self.SaveButton.setObjectName("SaveButton")
        self.ErrorLabel = QtWidgets.QLabel(Form)
        self.ErrorLabel.setGeometry(QtCore.QRect(20, 420, 421, 16))
        self.ErrorLabel.setText("")
        self.ErrorLabel.setObjectName("ErrorLabel")
        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(20, 170, 141, 16))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(Form)
        self.label_2.setGeometry(QtCore.QRect(20, 140, 141, 16))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(Form)
        self.label_3.setGeometry(QtCore.QRect(20, 110, 101, 16))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(Form)
        self.label_4.setGeometry(QtCore.QRect(20, 80, 111, 16))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(Form)
        self.label_5.setGeometry(QtCore.QRect(20, 50, 141, 16))
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(Form)
        self.label_6.setGeometry(QtCore.QRect(20, 20, 141, 16))
        self.label_6.setObjectName("label_6")
        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)
        self.id = None
        self.SaveButton.clicked.connect(self.save)

    def save(self):
        cool = False
        self.ErrorLabel.setText('')
        try:
            self.price = int(self.PriceLineEdit.text())
            if self.PriceLineEdit.text() == '':
                raise BaseException
            cool = True
        except BaseException:
            self.ErrorLabel.setText('Укажите цену целым числом')
        try:
            self.volume = int(self.VolumeLineEdit.text())
            if self.VolumeLineEdit.text() == '':
                raise BaseException
            cool = True
        except BaseException:
            cool = False
            self.ErrorLabel.setText('Укажите объем целым числом')
        if cool:
            if self.id is None:
                self.do_add()
            else:
                self.do_edit()

    def do_add(self):
        con = sqlite3.connect(self.parent.database)
        cur = con.cursor()
        self.name = self.NameLineEdit.text()
        self.grade = cur.execute('select id from grade_of_coffee where name = ?', (self.GradeComboBox.currentText(),)).fetchall()[0][0]
        try:
            self.id = cur.execute('select id from coffee').fetchall()[-1][0] + 1
        except BaseException:
            self.id = 0
        self.status = self.StatusSpinBox.value()
        self.description = self.DescriptionLineEdit.text()
        done = (self.id, self.name, self.grade, self.status, self.description, self.price, self.volume)
        exec = 'insert into coffee(id,name,grade,status,description,price,volume) values(?,?,?,?,?,?,?)'
        cur.execute(exec,done)
        con.commit()
        con.close()
        self.parent.load_table()
        self.close()

    def do_edit(self):
        con = sqlite3.connect(self.parent.database)
        cur = con.cursor()
        self.name = self.NameLineEdit.text()
        self.grade = cur.execute('select id from grade_of_coffee where name = ?', (self.GradeComboBox.currentText(),)).fetchall()[0][0]
        self.status = self.StatusSpinBox.value()
        self.description = self.DescriptionLineEdit.text()
        exec = 'UPDATE coffee set name = ? where id = ?'
        cur.execute(exec,(self.name,self.id))
        exec = 'UPDATE coffee set grade = ? where id = ?'
        cur.execute(exec, (self.grade, self.id))
        exec = 'UPDATE coffee set status = ? where id = ?'
        cur.execute(exec, (self.status, self.id))
        exec = 'UPDATE coffee set description = ? where id = ?'
        cur.execute(exec, (self.description, self.id))
        exec = 'UPDATE coffee set price = ? where id = ?'
        cur.execute(exec, (self.volume, self.id))
        exec = 'UPDATE coffee set volume = ? where id = ?'
        cur.execute(exec, (self.volume, self.id))
        con.commit()
        con.close()
        self.parent.load_table()
        self.close()

    def load_combo_box(self):
        con = sqlite3.connect(self.parent.database)
        cur = con.cursor()
        grade = list(map(lambda x: x[0],cur.execute('select name from grade_of_coffee').fetchall()))
        if self.GradeComboBox.currentText() in grade:
            grade.remove(self.GradeComboBox.currentText())
        for i in grade:
            self.GradeComboBox.addItem(i)
        con.close()

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.SaveButton.setText(_translate("Form", "Save"))
        self.label.setText(_translate("Form", "Объем"))
        self.label_2.setText(_translate("Form", "Цена"))
        self.label_3.setText(_translate("Form", "Описание"))
        self.label_4.setText(_translate("Form", "Молотый/В зернах"))
        self.label_5.setText(_translate("Form", "Степень обжарки"))
        self.label_6.setText(_translate("Form", "Название сорта"))
